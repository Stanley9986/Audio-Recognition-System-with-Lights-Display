#include <Arduino.h>
#include <Adafruit_ILI9341.h>
#include <PDM.h>

#define TFT_DC 2
#define TFT_CS 3

const uint8_t wifiIcon[] = {

};
const uint8_t speakerIcon[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x03, 0xE0, 0x00, 0x00, 0x00, 0x03, 0xC0, 0x1F, 0x00, 0xF8, 0x07, 
0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x3E, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x07, 0xE0, 0x00, 0x00, 0x00, 0x07, 0xE0, 0x3F, 0x01, 
0xFC, 0x07, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xF8, 0x00, 
0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF0, 0x00, 0x00, 0x00, 0x0F, 0xF0, 
0x3F, 0x81, 0xFC, 0x0F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 
0xFC, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x10, 
0x07, 0xE0, 0x7F, 0x81, 0xFC, 0x0F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x01, 0xF8, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x03, 0xE0, 0x00, 0x00, 0x00, 0x07, 0xF0, 0x00, 
0x00, 0xF8, 0x0F, 0xF0, 0x3F, 0x81, 0xFC, 0x0F, 0xF0, 0x00, 0x00, 0x00, 
0x07, 0xC0, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF0, 0x00, 0x00, 0x00, 0x07, 
0xF0, 0x00, 0x01, 0xFC, 0x07, 0xE0, 0x3F, 0x81, 0xFC, 0x0F, 0xE0, 0x00, 
0x00, 0x00, 0x0F, 0xE0, 0x00, 0x01, 0xF8, 0x00, 0x00, 0x7F, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF0, 0x00, 0x00, 
0x00, 0x07, 0xF0, 0x00, 0x01, 0xFC, 0x0F, 0xF0, 0x7F, 0x81, 0xFC, 0x0F, 
0xE0, 0x00, 0x00, 0x00, 0x0F, 0xE0, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x7F, 
0x00, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF0, 
0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x01, 0xFE, 0x0F, 0xE0, 0x3F, 0x81, 
0xFC, 0x0F, 0xE0, 0x00, 0x00, 0x00, 0x0F, 0xE0, 0x00, 0x01, 0xF8, 0x00, 
0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x07, 0xF0, 0x00, 0x00, 0x00, 0x07, 0xF0, 0x00, 0x01, 0xFC, 0x07, 0xF0, 
0x3F, 0x81, 0xFC, 0x0F, 0xE0, 0x00, 0x00, 0x00, 0x0F, 0xE0, 0x00, 0x03, 
0xFC, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x07, 0xF0, 0x00, 0x00, 0x00, 0x07, 0xF0, 0x00, 0x01, 0xFC, 
0x0F, 0xE0, 0x7F, 0x81, 0xFC, 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x0F, 0xE0, 
0x00, 0x01, 0xF8, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x07, 0xF0, 0x00, 0x00, 0x00, 0x07, 0xF0, 0x00, 
0x01, 0xFC, 0x07, 0xF0, 0x3F, 0x81, 0xFC, 0x0F, 0xE0, 0x00, 0x00, 0x00, 
0x0F, 0xE0, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 
0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF0, 0x1E, 0x00, 0x00, 0x0F, 
0xF0, 0x00, 0x01, 0xFE, 0x0F, 0xE0, 0x3F, 0x01, 0xFC, 0x0F, 0xE0, 0x00, 
0x00, 0x00, 0x0F, 0xE0, 0x00, 0x01, 0xF8, 0x00, 0x00, 0x7F, 0x00, 0x00, 
0x00, 0x00, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF0, 0x1F, 0x80, 
0x00, 0x07, 0xF0, 0x00, 0x01, 0xFC, 0x0F, 0xF0, 0x7F, 0x81, 0xFC, 0x0F, 
0xE0, 0x00, 0x00, 0x00, 0x0F, 0xE0, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x7F, 
0x00, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF0, 
0x3F, 0x80, 0x00, 0x07, 0xF0, 0x00, 0x01, 0xFC, 0x07, 0xE0, 0x3F, 0x81, 
0xFC, 0x0F, 0xE0, 0x00, 0x00, 0x00, 0x0F, 0xE0, 0x00, 0x01, 0xF8, 0x00, 
0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x07, 0xF0, 0x3F, 0x80, 0x00, 0x0F, 0xF0, 0x00, 0x01, 0xFC, 0x0F, 0xF0, 
0x3F, 0x81, 0xFC, 0x0F, 0xE0, 0x00, 0x00, 0x00, 0x0F, 0xE0, 0x00, 0x03, 
0xFC, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x07, 0xF0, 0x3F, 0x80, 0xFC, 0x07, 0xF0, 0x00, 0x01, 0xFC, 
0x07, 0xE0, 0x7F, 0x81, 0xFC, 0x0F, 0xE0, 0x3F, 0x00, 0x00, 0x0F, 0xE0, 
0x3E, 0x01, 0xF8, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x07, 0xF0, 0x3F, 0xC0, 0xFC, 0x07, 0xF0, 0x00, 
0x01, 0xFE, 0x0F, 0xF0, 0x3F, 0x81, 0xFC, 0x0F, 0xF0, 0x3F, 0x00, 0x00, 
0x0F, 0xE0, 0x7F, 0x03, 0xFC, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 
0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF0, 0x3F, 0x81, 0xFE, 0x0F, 
0xF0, 0x00, 0x01, 0xFC, 0x0F, 0xE0, 0x3F, 0x81, 0xFC, 0x0F, 0xE0, 0x7F, 
0x80, 0x00, 0x0F, 0xE0, 0x7F, 0x01, 0xF8, 0x00, 0x00, 0x7F, 0x00, 0x00, 
0x00, 0x00, 0xFE, 0x00, 0x00, 0x02, 0x00, 0x00, 0x07, 0xF0, 0x3F, 0x81, 
0xFC, 0x07, 0xF0, 0x00, 0x01, 0xFC, 0x07, 0xF0, 0x7F, 0x81, 0xFC, 0x0F, 
0xE0, 0x7F, 0x00, 0x00, 0x0F, 0xE0, 0x7F, 0x83, 0xFC, 0x00, 0x00, 0x7F, 
0x00, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x1F, 0x80, 0x00, 0x07, 0xF0, 
0x3F, 0x80, 0xFE, 0x07, 0xF0, 0x00, 0x01, 0xFC, 0x0F, 0xE0, 0x3F, 0x81, 
0xFC, 0x0F, 0xE0, 0x7F, 0x80, 0x00, 0x0F, 0xE0, 0x7F, 0x03, 0xF8, 0x00, 
0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x1F, 0x80, 0x00, 
0x07, 0xF0, 0x3F, 0x81, 0xFC, 0x0F, 0xF0, 0x00, 0x01, 0xFC, 0x0F, 0xF0, 
0x3F, 0x81, 0xFC, 0x0F, 0xE0, 0x3F, 0x00, 0x00, 0x0F, 0xE0, 0x7F, 0x01, 
0xFC, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x3F, 
0xC0, 0x00, 0x07, 0xF0, 0x3F, 0xC1, 0xFE, 0x07, 0xF0, 0x00, 0x01, 0xFC, 
0x07, 0xE0, 0x7F, 0x81, 0xFC, 0x0F, 0xE0, 0x7F, 0x80, 0x00, 0x0F, 0xE0, 
0x7F, 0x03, 0xF8, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x01, 
0x40, 0x1F, 0x80, 0x00, 0x07, 0xF0, 0x3F, 0x80, 0xFC, 0x07, 0xF0, 0x0A, 
0x01, 0xFE, 0x0F, 0xF0, 0x3F, 0x81, 0xFC, 0x0F, 0xE0, 0x7F, 0x00, 0x50, 
0x0F, 0xE0, 0x7F, 0x81, 0xFC, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 
0xFE, 0x03, 0xF0, 0x3F, 0xC0, 0x00, 0x07, 0xF0, 0x3F, 0x81, 0xFE, 0x0F, 
0xF0, 0x3F, 0x81, 0xFC, 0x0F, 0xE0, 0x3F, 0x81, 0xFC, 0x0F, 0xE0, 0x7F, 
0x81, 0xF8, 0x0F, 0xE0, 0x7F, 0x03, 0xF8, 0x00, 0x00, 0x7F, 0x00, 0x00, 
0x00, 0x00, 0xFE, 0x07, 0xF0, 0x3F, 0x80, 0x00, 0x07, 0xF0, 0x3F, 0x81, 
0xFC, 0x07, 0xF0, 0x3F, 0x81, 0xFC, 0x07, 0xF0, 0x7F, 0x81, 0xFC, 0x0F, 
0xE0, 0x3F, 0x01, 0xFC, 0x0F, 0xE0, 0x7F, 0x03, 0xFC, 0x00, 0x00, 0x7F, 
0x00, 0x00, 0x00, 0x00, 0xFE, 0x07, 0xF0, 0x1F, 0xC0, 0x00, 0x07, 0xF0, 
0x3F, 0x80, 0xFE, 0x07, 0xF0, 0x3F, 0x81, 0xFC, 0x0F, 0xE0, 0x3F, 0x81, 
0xFC, 0x0F, 0xF0, 0x7F, 0x83, 0xFC, 0x0F, 0xE0, 0x7F, 0x01, 0xF8, 0x00, 
0x00, 0x7F, 0x00, 0x00, 0x0F, 0x00, 0xFE, 0x07, 0xF8, 0x3F, 0x80, 0x78, 
0x07, 0xF0, 0x3F, 0x81, 0xFC, 0x0F, 0xF0, 0x3F, 0x81, 0xFC, 0x07, 0xF0, 
0x3F, 0x81, 0xFC, 0x0F, 0xE0, 0x7F, 0x01, 0xFC, 0x0F, 0xE0, 0x7F, 0x83, 
0xFC, 0x07, 0x80, 0x7F, 0x01, 0xF0, 0x1F, 0xC0, 0xFE, 0x07, 0xF0, 0x1F, 
0xC0, 0xFE, 0x07, 0xF0, 0x3F, 0xC1, 0xFE, 0x07, 0xF0, 0x3F, 0x81, 0xFC, 
0x0F, 0xE0, 0x7F, 0x81, 0xFC, 0x0F, 0xE0, 0x7F, 0x81, 0xFC, 0x0F, 0xE0, 
0x7F, 0x01, 0xF8, 0x0F, 0xE0, 0x7F, 0x03, 0xF8, 0x1F, 0xC0, 0xFE, 0x07, 
0xF0, 0x3F, 0x80, 0xFE, 0x07, 0xF0, 0x3F, 0x80, 0xFE, 0x07, 0xF0, 0x3F, 
0x81, 0xFC, 0x0F, 0xF0, 0x3F, 0x81, 0xFC, 0x0F, 0xE0, 0x3F, 0x03, 0xFC, 
0x0F, 0xE0, 0x7F, 0x03, 0xFC, 0x0F, 0xE0, 0x7F, 0x03, 0xF8, 0x1F, 0xC0, 
0xFE, 0x07, 0xF0, 0x3F, 0xC1, 0xFE, 0x07, 0xF0, 0x3F, 0x81, 0xFC, 0x0F, 
0xF0, 0x3F, 0x81, 0xFE, 0x07, 0xE0, 0x3F, 0x81, 0xFC, 0x0F, 0xE0, 0x7F, 
0x81, 0xFC, 0x0F, 0xE0, 0x7F, 0x03, 0xF8, 0x1F, 0xE0, 0x7F, 0x03, 0xF8, 
0x3F, 0xC0, 0xFE, 0x07, 0xF8, 0x1F, 0x80, 0xFC, 0x07, 0xF0, 0x3F, 0x81, 
0xFE, 0x07, 0xF0, 0x3F, 0x81, 0xFC, 0x0F, 0xF0, 0x7F, 0x81, 0xFC, 0x0F, 
0xE0, 0x7F, 0x01, 0xFC, 0x0F, 0xE0, 0x7F, 0x01, 0xFC, 0x0F, 0xC0, 0x7F, 
0x03, 0xF8, 0x1F, 0x80, 0xFE, 0x07, 0xF0, 0x3F, 0xC0, 0xFE, 0x07, 0xF0, 
0x3F, 0x80, 0xFC, 0x07, 0xF0, 0x3F, 0x81, 0xFC, 0x0F, 0xE0, 0x3F, 0x81, 
0xFC, 0x0F, 0xE0, 0x7F, 0x83, 0xFC, 0x0F, 0xE0, 0x7F, 0x83, 0xF8, 0x0F, 
0xE0, 0x7F, 0x03, 0xF8, 0x1F, 0xC0, 0xFE, 0x07, 0xF0, 0x3F, 0x81, 0xFE, 
0x07, 0xF0, 0x3F, 0x81, 0xFE, 0x0F, 0xF0, 0x3F, 0x81, 0xFC, 0x07, 0xF0, 
0x3F, 0x81, 0xFC, 0x0F, 0xE0, 0x3F, 0x01, 0xFC, 0x0F, 0xE0, 0x7F, 0x03, 
0xFC, 0x1F, 0xE0, 0x7F, 0x03, 0xF8, 0x1F, 0xC0, 0xFE, 0x07, 0xF0, 0x1F, 
0xC0, 0xFE, 0x07, 0xF0, 0x3F, 0x81, 0xFC, 0x07, 0xF0, 0x3F, 0x81, 0xFC, 
0x0F, 0xE0, 0x7F, 0x81, 0xFC, 0x0F, 0xE0, 0x7F, 0x81, 0xFC, 0x0F, 0xE0, 
0x7F, 0x01, 0xF8, 0x0F, 0xE0, 0x7F, 0x03, 0xF8, 0x3F, 0xC0, 0xFE, 0x07, 
0xF8, 0x3F, 0x81, 0xFE, 0x07, 0xF0, 0x3F, 0xC1, 0xFE, 0x07, 0xF0, 0x3F, 
0x81, 0xFC, 0x0F, 0xF0, 0x3F, 0x81, 0xFC, 0x0F, 0xF0, 0x7F, 0x03, 0xFC, 
0x0F, 0xE0, 0x7F, 0x03, 0xFC, 0x0F, 0xE0, 0x7F, 0x03, 0xF8, 0x1F, 0x80, 
0xFE, 0x07, 0xF0, 0x1F, 0xC0, 0xFC, 0x07, 0xF0, 0x3F, 0x80, 0xFC, 0x0F, 
0xF0, 0x3F, 0x81, 0xFC, 0x07, 0xE0, 0x3F, 0x81, 0xFC, 0x0F, 0xE0, 0x7F, 
0x81, 0xFC, 0x0F, 0xE0, 0x7F, 0x01, 0xF8, 0x1F, 0xC0, 0x7F, 0x03, 0xF8, 
0x1F, 0xC0, 0xFE, 0x07, 0xF0, 0x3F, 0x80, 0xFE, 0x07, 0xF0, 0x3F, 0x81, 
0xFE, 0x07, 0xF0, 0x3F, 0x81, 0xFE, 0x0F, 0xF0, 0x7F, 0x81, 0xFC, 0x0F, 
0xE0, 0x3F, 0x01, 0xFC, 0x0F, 0xE0, 0x7F, 0x83, 0xFC, 0x0F, 0xE0, 0x7F, 
0x01, 0xF8, 0x0E, 0x80, 0xFE, 0x07, 0xF0, 0x3F, 0xC0, 0x68, 0x07, 0xF0, 
0x3F, 0x81, 0xFC, 0x07, 0xF0, 0x3F, 0x81, 0xFC, 0x0F, 0xE0, 0x3F, 0x81, 
0xFC, 0x0F, 0xE0, 0x7F, 0x83, 0xFC, 0x0F, 0xE0, 0x7F, 0x03, 0xF8, 0x06, 
0x80, 0x7F, 0x00, 0xD0, 0x00, 0x00, 0xFE, 0x07, 0xF0, 0x1F, 0x80, 0x00, 
0x07, 0xF0, 0x3F, 0x80, 0xFE, 0x0F, 0xF0, 0x3F, 0x81, 0xFC, 0x07, 0xF0, 
0x3F, 0x81, 0xFC, 0x0F, 0xE0, 0x7F, 0x01, 0xFC, 0x0F, 0xE0, 0x7F, 0x01, 
0xFC, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x07, 0xF0, 0x3F, 
0xC0, 0x00, 0x07, 0xF0, 0x3F, 0x81, 0xFC, 0x07, 0xF0, 0x3F, 0x81, 0xFC, 
0x0F, 0xE0, 0x7F, 0x81, 0xFC, 0x0F, 0xE0, 0x3F, 0x81, 0xF8, 0x0F, 0xE0, 
0x7F, 0x03, 0xF8, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x03, 
0xF0, 0x3F, 0x80, 0x00, 0x07, 0xF0, 0x3F, 0x81, 0xFE, 0x07, 0xF0, 0x3F, 
0x01, 0xFC, 0x0F, 0xF0, 0x3F, 0x81, 0xFC, 0x0F, 0xE0, 0x7F, 0x01, 0xF8, 
0x0F, 0xE0, 0x7F, 0x01, 0xFC, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 
0xFE, 0x00, 0x80, 0x1F, 0xC0, 0x00, 0x07, 0xF0, 0x3F, 0x81, 0xFC, 0x0F, 
0xF0, 0x0A, 0x01, 0xFC, 0x07, 0xE0, 0x3F, 0x81, 0xFC, 0x0F, 0xE0, 0x7F, 
0x80, 0x50, 0x0F, 0xE0, 0x7F, 0x83, 0xF8, 0x00, 0x00, 0x7F, 0x00, 0x00, 
0x00, 0x00, 0xFE, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x07, 0xF0, 0x3F, 0xC0, 
0xFE, 0x07, 0xF0, 0x00, 0x01, 0xFC, 0x0F, 0xF0, 0x7F, 0x81, 0xFC, 0x0F, 
0xE0, 0x7F, 0x00, 0x00, 0x0F, 0xE0, 0x7F, 0x03, 0xFC, 0x00, 0x00, 0x7F, 
0x00, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x1F, 0xC0, 0x00, 0x07, 0xF0, 
0x3F, 0x81, 0xFC, 0x07, 0xF0, 0x00, 0x01, 0xFE, 0x0F, 0xE0, 0x3F, 0x81, 
0xFC, 0x0F, 0xF0, 0x3F, 0x80, 0x00, 0x0F, 0xE0, 0x7F, 0x01, 0xF8, 0x00, 
0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x1F, 0x00, 0x00, 
0x07, 0xF0, 0x3F, 0x81, 0xFE, 0x0F, 0xF0, 0x00, 0x01, 0xFC, 0x07, 0xF0, 
0x3F, 0x81, 0xFC, 0x0F, 0xE0, 0x7F, 0x00, 0x00, 0x0F, 0xE0, 0x7F, 0x03, 
0xFC, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x07, 0xF0, 0x3F, 0x81, 0xFC, 0x07, 0xF0, 0x00, 0x01, 0xFC, 
0x0F, 0xE0, 0x7F, 0x81, 0xFC, 0x0F, 0xE0, 0x7F, 0x80, 0x00, 0x0F, 0xE0, 
0x7F, 0x01, 0xF8, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x07, 0xF0, 0x3F, 0x80, 0xFE, 0x07, 0xF0, 0x00, 
0x01, 0xFC, 0x0F, 0xF0, 0x3F, 0x81, 0xFC, 0x0F, 0xE0, 0x7F, 0x00, 0x00, 
0x0F, 0xE0, 0x7F, 0x03, 0xFC, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 
0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF0, 0x3F, 0x81, 0xFC, 0x0F, 
0xF0, 0x00, 0x01, 0xFC, 0x07, 0xE0, 0x3F, 0x81, 0xFC, 0x0F, 0xE0, 0x3F, 
0x00, 0x00, 0x0F, 0xE0, 0x3F, 0x03, 0xF8, 0x00, 0x00, 0x7F, 0x00, 0x00, 
0x00, 0x00, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF0, 0x3F, 0x80, 
0x78, 0x07, 0xF0, 0x00, 0x01, 0xFC, 0x0F, 0xF0, 0x7F, 0x81, 0xFC, 0x0F, 
0xE0, 0x1E, 0x00, 0x00, 0x0F, 0xE0, 0x3C, 0x01, 0xFC, 0x00, 0x00, 0x7F, 
0x00, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF0, 
0x3F, 0x80, 0x00, 0x07, 0xF0, 0x00, 0x01, 0xFC, 0x0F, 0xE0, 0x3F, 0x81, 
0xFC, 0x0F, 0xE0, 0x00, 0x00, 0x00, 0x0F, 0xE0, 0x00, 0x03, 0xF8, 0x00, 
0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x07, 0xF0, 0x3F, 0x80, 0x00, 0x0F, 0xF0, 0x00, 0x01, 0xFE, 0x07, 0xF0, 
0x3F, 0x81, 0xFC, 0x0F, 0xE0, 0x00, 0x00, 0x00, 0x0F, 0xE0, 0x00, 0x03, 
0xFC, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x07, 0xF0, 0x1F, 0x80, 0x00, 0x07, 0xF0, 0x00, 0x01, 0xFC, 
0x0F, 0xE0, 0x7F, 0x81, 0xFC, 0x0F, 0xE0, 0x00, 0x00, 0x00, 0x0F, 0xE0, 
0x00, 0x01, 0xF8, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x07, 0xF0, 0x0A, 0x00, 0x00, 0x07, 0xF0, 0x00, 
0x01, 0xFC, 0x0F, 0xF0, 0x3F, 0x81, 0xFC, 0x0F, 0xF0, 0x00, 0x00, 0x00, 
0x0F, 0xE0, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 
0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF0, 0x00, 0x00, 0x00, 0x0F, 
0xF0, 0x00, 0x01, 0xFC, 0x07, 0xE0, 0x3F, 0x81, 0xFC, 0x0F, 0xE0, 0x00, 
0x00, 0x00, 0x0F, 0xE0, 0x00, 0x03, 0xF8, 0x00, 0x00, 0x7F, 0x00, 0x00, 
0x00, 0x00, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF0, 0x00, 0x00, 
0x00, 0x07, 0xF0, 0x00, 0x01, 0xFC, 0x0F, 0xF0, 0x7F, 0x81, 0xFC, 0x0F, 
0xE0, 0x00, 0x00, 0x00, 0x0F, 0xE0, 0x00, 0x01, 0xFC, 0x00, 0x00, 0x7F, 
0x00, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF0, 
0x00, 0x00, 0x00, 0x07, 0xF0, 0x00, 0x01, 0xFC, 0x0F, 0xE0, 0x3F, 0x81, 
0xFC, 0x0F, 0xE0, 0x00, 0x00, 0x00, 0x0F, 0xE0, 0x00, 0x03, 0xF8, 0x00, 
0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x07, 0xF0, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x01, 0xFC, 0x07, 0xF0, 
0x3F, 0x81, 0xFC, 0x0F, 0xE0, 0x00, 0x00, 0x00, 0x0F, 0xE0, 0x00, 0x03, 
0xFC, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x07, 0xF0, 0x00, 0x00, 0x00, 0x07, 0xF0, 0x00, 0x01, 0xFC, 
0x0F, 0xE0, 0x7F, 0x81, 0xFC, 0x0F, 0xE0, 0x00, 0x00, 0x00, 0x0F, 0xE0, 
0x00, 0x01, 0xF8, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x07, 0xF0, 0x00, 0x00, 0x00, 0x07, 0xF0, 0x00, 
0x00, 0xFC, 0x0F, 0xF0, 0x3F, 0x81, 0xFC, 0x0F, 0xE0, 0x00, 0x00, 0x00, 
0x0F, 0xE0, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xE0, 0x00, 0x00, 0x00, 0x0F, 
0xF0, 0x00, 0x00, 0xF8, 0x07, 0xE0, 0x3F, 0x01, 0xFC, 0x0F, 0xE0, 0x00, 
0x00, 0x00, 0x07, 0xC0, 0x00, 0x03, 0xF8, 0x00, 0x00, 0x7F, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x07, 0xF0, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x7F, 0x81, 0xFC, 0x0F, 
0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFC, 0x00, 0x00, 0x7F, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x07, 0xE0, 0x00, 0x00, 0x00, 0x0F, 0xE0, 0x3F, 0x81, 
0xFC, 0x0F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xF8, 0x00, 
0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF0, 0x00, 0x00, 0x00, 0x07, 0xE0, 
0x3F, 0x01, 0xFC, 0x07, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 
0xF8, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xC0, 0x00, 0x00, 0x00, 
0x03, 0xC0, 0x1E, 0x00, 0xF8, 0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0xF0, 0x00, 0x00, 0x3E, 0x00, 0x00
};

short buff2[80000];
volatile int samplesRead = 0;
volatile bool recording = true;
void onPDMData();

void display(const void* icon, bool isColorIcon, String title, String subtitle, uint16_t bgcolor);
void display(const uint16_t* icon, String title, String subtitle, uint16_t bgcolor);
void display(const uint8_t* icon, String title, String subtitle, uint16_t bgcolor);
void displayConnecting();
void displayDisconnected(String message);
void displayDisconnected();
void displayHello();
void displayListening();
void displaySong(uint16_t* songName, String songArtist, String songArt);


Adafruit_ILI9341 tft = Adafruit_ILI9341(TFT_CS, TFT_DC);

void setup() {
    tft.begin();

    displayConnecting();

    tft.println("Connecting to Serial...");
    Serial.begin(2000000);
    while (!Serial) { }

    tft.println("Connecting to server...");
    Serial.println("STATUS");
    while (!Serial.available()) { }
    if (Serial.readString() != "OK\n")
        displayDisconnected("Server connection failed");
    Serial.println("RECORD");

    tft.println("Initializing PDM...");
    PDM.setGain(32);
    PDM.setBufferSize(1024);
    PDM.onReceive(onPDMData);
    if (!PDM.begin(1, 16000))
        displayDisconnected("PDM init failed");

    displayHello();
    delay(1000);
    displayListening();
}

unsigned long prevTime = 0;

void loop(void) {
    if (samplesRead >= 80000) {
        PDM.end();

        // for (int i = 0; i < samplesRead; i++)
        //     Serial.write((uint8_t*) &buff2[i], 2);
        Serial.write((uint8_t*) buff2, 160000);

        samplesRead = 0;

        while (!Serial.available()) { }
        String result = Serial.readString();
        if (!(result == "NOT FOUND\n"))
            displaySong(nullptr, result, "");

        PDM.begin(1, 16000);
    }

    if (millis() > prevTime + 5000 && Serial.available()) {
        tft.println(Serial.readString());
    }
}

void onPDMData() {
    int bytesAvailable = PDM.available();
    if (samplesRead + bytesAvailable / 2 <= 80000) {
        PDM.read(buff2+samplesRead, bytesAvailable);
        samplesRead = samplesRead + bytesAvailable / 2;
    } else {
        PDM.read(buff2+samplesRead, 80000 - samplesRead);
        samplesRead = 80000;
    }
}

void displayConnecting() {
    display(wifiIcon, false, "Connecting...", "", ILI9341_BLUE);
    tft.setTextSize(1);
}

void displayHello() {
    display(nullptr, false, "Shazam Nano", "", ILI9341_WHITE);
}

void displayDisconnected(String message) {
    display(wifiIcon, false, "Disconnected", message, ILI9341_RED);
    while (true) { }
}

void displayDisconnected() {
    displayDisconnected("");
}

void displayListening() {
    display(nullptr, false, "Listening...", "", ILI9341_BLACK);
    tft.drawBitmap(0, 100, speakerIcon, 304, 64, ILI9341_WHITE);
}

void displaySong(uint16_t* songArt, String songName, String songArtist) {
    display(songArt, songName, songArtist, ILI9341_DARKGREY);
}


void display(const void* icon, bool isColorIcon, String title, String subtitle, uint16_t bgcolor) {
    tft.fillScreen(bgcolor);

    if (icon != nullptr)
        if (isColorIcon)
            tft.drawRGBBitmap((tft.width() - 64) / 2, 20, (uint16_t*)icon, 64, 64);
        else
            tft.drawBitmap((tft.width() - 64) / 2, 20, (uint8_t*)icon, 64, 64, ILI9341_WHITE);

    int16_t x1, y1;
    uint16_t w, h;
    tft.setTextColor(bgcolor == ILI9341_WHITE ? ILI9341_BLACK : ILI9341_WHITE);

    tft.setTextSize(2);
    tft.getTextBounds(title, 0, 0, &x1, &y1, &w, &h);
    tft.setCursor((tft.width() - w) / 2, (tft.height() - h) / 2 + 32);
    tft.println(title);

    tft.setTextSize(1);
    tft.getTextBounds(subtitle, 0, 0, &x1, &y1, &w, &h);
    tft.setCursor((tft.width() - w) / 2, (tft.height() - h) / 2 + 64);
    tft.println(subtitle);
}
void display(const uint16_t* icon, String title, String subtitle, uint16_t bgcolor) {
    display((void*)icon, true, title, subtitle, bgcolor);
}
void display(const uint8_t* icon, String title, String subtitle, uint16_t bgcolor) {
    display(icon, false, title, subtitle, bgcolor);
}